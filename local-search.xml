<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java基础（一）数据类型</title>
    <link href="/2022/10/01/Java%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2022/10/01/Java%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<p>一、前置知识</p><ol><li>位（bit）</li></ol><ul><li>数据存储的最小单位</li><li>可储存0或1</li></ul><ol start="2"><li>字节（Byte）</li></ol><ul><li>数据处理的最小单位</li><li>1字节&#x3D;8位</li></ul><p>二、基本类型</p><ol><li>八种类型</li></ol><table><thead><tr><th align="center">类型</th><th align="center">种类</th><th align="center">字节</th><th align="center">默认值</th><th align="center">封装类型</th></tr></thead><tbody><tr><td align="center">整型</td><td align="center">byte</td><td align="center">1</td><td align="center">0</td><td align="center">Byte</td></tr><tr><td align="center">整型</td><td align="center">short</td><td align="center">2</td><td align="center">0</td><td align="center">Short</td></tr><tr><td align="center">整型</td><td align="center">int</td><td align="center">4</td><td align="center">0</td><td align="center">Integer</td></tr><tr><td align="center">整型</td><td align="center">long</td><td align="center">8</td><td align="center">0l</td><td align="center">Long</td></tr><tr><td align="center">浮点型</td><td align="center">float</td><td align="center">4</td><td align="center">0.0f</td><td align="center">Float</td></tr><tr><td align="center">浮点型</td><td align="center">double</td><td align="center">8</td><td align="center">0.0d</td><td align="center">Double</td></tr><tr><td align="center">字符型</td><td align="center">char</td><td align="center">2</td><td align="center">‘u0000’</td><td align="center">Character</td></tr><tr><td align="center">布尔型</td><td align="center">boolean</td><td align="center"></td><td align="center">false</td><td align="center">Boolean</td></tr></tbody></table><ol start="2"><li><p>基本类型之间的转换</p></li><li><p>基本类型与封装类型的区别</p></li></ol><p>三、引用类型</p><ol><li>类、接口、数组</li></ol><p>四、基本类型与引用类型的区别</p><ol><li>概念</li></ol><ul><li>基本类型：变量指向数值</li><li>引用类型：变量指向地址</li></ul><ol start="2"><li>内存</li></ol><ul><li>基本类型：存储在栈内存</li><li>引用类型：存储在栈内存与堆内存</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python操作Excel-xlwings篇</title>
    <link href="/2022/09/27/Python%E6%93%8D%E4%BD%9CExcel-xlwings%E7%AF%87/"/>
    <url>/2022/09/27/Python%E6%93%8D%E4%BD%9CExcel-xlwings%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<ol><li>导入包</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> xlwings <span class="hljs-keyword">as</span> xw<br></code></pre></td></tr></table></figure><ol start="2"><li>打开Excel程序（App）</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">app</span> = xw.App(visible=<span class="hljs-literal">True</span>,add_book=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><ol start="3"><li>打开Excel文件（Book）</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">wk</span> <span class="hljs-operator">=</span> app.books.open(<span class="hljs-string">&quot;test.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure><ol start="4"><li>选择工作表（Sheet）</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">sht</span> <span class="hljs-operator">=</span> wk.sheets[<span class="hljs-string">&quot;Sheet1&quot;</span>]<br></code></pre></td></tr></table></figure><p>5. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">s = []                  <span class="hljs-comment"># 创建一个空列表</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):      <span class="hljs-comment"># 创建一个5行的列表（行）</span><br>    s.append([])        <span class="hljs-comment"># 在空的列表中添加空的列表</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):  <span class="hljs-comment"># 循环每一行的每一个元素（列）</span><br>        s[i].append(j)  <span class="hljs-comment"># 为内层列表添加元素</span><br><span class="hljs-built_in">print</span>(s)                <span class="hljs-comment"># 输出列表</span><br></code></pre></td></tr></table></figure><ol start="6"><li>列操作</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#获取一列数据</span><br>sht.<span class="hljs-built_in">range</span>(<span class="hljs-string">&quot;A1:A5&quot;</span>).value<br><span class="hljs-comment">#写入一列数据</span><br><span class="hljs-built_in">list</span> = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<br>sht.<span class="hljs-built_in">range</span>(<span class="hljs-string">&#x27;A1&#x27;</span>).options(transpose=<span class="hljs-literal">True</span>).value = <span class="hljs-built_in">list</span><br><span class="hljs-comment">#删除一列数据</span><br>sht[<span class="hljs-string">&#x27;A:A&#x27;</span>].delete()<br></code></pre></td></tr></table></figure><ol start="7"><li>单元格</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#设置为文本格式</span><br>sht.<span class="hljs-built_in">range</span>(<span class="hljs-string">&#x27;A1:A5&#x27;</span>).api.NumberFormat = <span class="hljs-string">&quot;@&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python操作Excel-Pandas篇</title>
    <link href="/2022/09/27/Python%E6%93%8D%E4%BD%9CExcel-Pandas%E7%AF%87/"/>
    <url>/2022/09/27/Python%E6%93%8D%E4%BD%9CExcel-Pandas%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<ol><li>导入包</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><ol start="2"><li>操作Excel</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#读取数据</span><br>df = pd.read_excel(<span class="hljs-string">&quot;text.xlsx&quot;</span>,sheet_name=<span class="hljs-string">&quot;Sheet1&quot;</span>)<br><span class="hljs-comment">#写入数据（覆盖）</span><br>df.to_excel(<span class="hljs-string">&#x27;textout.xlsx&#x27;</span>, sheet_name=<span class="hljs-string">&#x27;Sheet1&#x27;</span>,index=<span class="hljs-literal">False</span>)<br><span class="hljs-comment">#写入数据（不覆盖）</span><br><span class="hljs-keyword">import</span> xlwings <span class="hljs-keyword">as</span> xw<br>wb = xw.Book(<span class="hljs-string">&quot;textout.xlsx&quot;</span>)<br>sht = wb.sheets[<span class="hljs-string">&quot;sheet1&quot;</span>]<br>sht.<span class="hljs-built_in">range</span>(<span class="hljs-string">&quot;A1&quot;</span>).value = df<br></code></pre></td></tr></table></figure><ol start="3"><li>获取信息</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#查看各列的数据类型，是否为空值，内存占用情况</span><br>df.info()<br><span class="hljs-comment">#获取行数</span><br><span class="hljs-built_in">len</span>(df)<br><span class="hljs-comment">#获取列数</span><br><span class="hljs-built_in">len</span>(df.columns) <br></code></pre></td></tr></table></figure><ol start="3"><li>转换类型</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&quot;订单编号&quot;</span>]=df[<span class="hljs-string">&quot;订单编号&quot;</span>].astype(<span class="hljs-built_in">str</span>)<br></code></pre></td></tr></table></figure><ol start="4"><li>筛选数据</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#按行筛选</span><br>df.loc[x:y]<br><span class="hljs-comment">#按值筛选</span><br>df[(df[<span class="hljs-string">&#x27;列名&#x27;</span>] == <span class="hljs-string">&#x27;属性&#x27;</span>)]<br><span class="hljs-comment">#按日期范围筛选</span><br>df[<span class="hljs-string">&#x27;处理时间&#x27;</span>] = df[<span class="hljs-string">&quot;处理时间&quot;</span>].values.astype(<span class="hljs-string">&#x27;datetime64&#x27;</span>)<br>s_date = datetime.datetime.strptime(<span class="hljs-string">&#x27;20220201&#x27;</span>, <span class="hljs-string">&#x27;%Y%m%d&#x27;</span>).date()<br>e_date = datetime.datetime.strptime(<span class="hljs-string">&#x27;20220301&#x27;</span>, <span class="hljs-string">&#x27;%Y%m%d&#x27;</span>).date()<br>df[(df.处理时间 &gt; pd.Timestamp(s_date)) &amp; (df.处理时间 &lt; pd.Timestamp(e_date))]<br></code></pre></td></tr></table></figure><p>三、其他</p><ol><li>获取当前时间</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> strftime<br>now=datetime.datetime.now()<br><span class="hljs-built_in">print</span>(now.strftime(<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>))<br></code></pre></td></tr></table></figure><ol start="2"><li>选择文件并返回路径</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> tkinter <span class="hljs-keyword">as</span> tk<br><span class="hljs-keyword">from</span> tkinter <span class="hljs-keyword">import</span> filedialog<br><span class="hljs-comment"># 实例化</span><br>root = tk.Tk()<br>root.withdraw()<br><span class="hljs-comment"># 获取文件夹路径</span><br>f_path = filedialog.askopenfilename()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n获取的文件地址：&#x27;</span>, f_path)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo部署后没更新的解决方法</title>
    <link href="/2022/09/27/hexo%E9%83%A8%E7%BD%B2%E5%90%8E%E6%B2%A1%E6%9B%B4%E6%96%B0%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2022/09/27/hexo%E9%83%A8%E7%BD%B2%E5%90%8E%E6%B2%A1%E6%9B%B4%E6%96%B0%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="1-使用以下代码"><a href="#1-使用以下代码" class="headerlink" title="1.使用以下代码"></a>1.使用以下代码</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h3 id="2-分支问题"><a href="#2-分支问题" class="headerlink" title="2.分支问题"></a>2.分支问题</h3><ul><li>查看”_config.yml”文件下的branch</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/AczerZo/AczerZo.github.io.git</span><br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><ul><li>打开github仓库，选择setting</li><li>选择pages，选择Branch，点击save</li></ul><h3 id="3-浏览器缓存问题"><a href="#3-浏览器缓存问题" class="headerlink" title="3.浏览器缓存问题"></a>3.浏览器缓存问题</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo常用命令</title>
    <link href="/2022/09/25/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/09/25/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<ol><li>新建文章：<code>hexo new 名称</code></li><li>清除文件：<code>hexo clean</code></li><li>生成并预览：<code>hexo g -s</code></li><li>生成并部署：<code>hexo g -d</code></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
